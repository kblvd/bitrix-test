<? namespace Bitrix\Main\Security\W;$GLOBALS['____1616545343']= array(base64_decode(''.'dGltZQ=='),base64_decode(''.'dGl'.'tZQ'.'='.'='),base64_decode('a'.'nNv'.'bl9kZ'.'WNvZG'.'U='),base64_decode('YXJyY'.'Xl'.'fbWVyZ2U='),base64_decode('am9pbg=='),base64_decode('am9p'.'bg=='),base64_decode('am9pbg=='),base64_decode('YXJ'.'yYXlfc'.'G'.'9w'),base64_decode('YXJy'.'YXlfc2'.'hpZnQ'.'='),base64_decode('Y'.'XJyYXl'.'fc'.'2hpZn'.'Q='),base64_decode(''.'YXJyY'.'X'.'l'.'fc2hpZnQ='),base64_decode('YXJy'.'YXl'.'f'.'c'.'2hpZ'.'n'.'Q='),base64_decode('YXJyYXlfbWV'.'yZ2U'.'='),base64_decode('aXNfY'.'XJyY'.'Xk='),base64_decode(''.'YXJyYXl'.'fbWVyZ2'.'U='),base64_decode('a'.'W5'.'f'.'YXJyY'.'Xk='),base64_decode('a'.'W5f'.'Y'.'XJyY'.'Xk'.'='),base64_decode(''.'aW5fYXJyYX'.'k='),base64_decode('a'.'W'.'5'.'fYXJyYXk'.'='),base64_decode(''.'aW5f'.'YXJyYXk'.'='),base64_decode('dG'.'l'.'tZQ='.'='),base64_decode('dGlt'.'ZQ=='),base64_decode('YXJyY'.'X'.'lfb'.'WFw'),base64_decode('an'.'Nv'.'b'.'l9'.'lbmNvZGU='),base64_decode('anNvbl9l'.'bm'.'N'.'v'.'Z'.'GU='),base64_decode(''.'am'.'9pbg=='));if(!function_exists(__NAMESPACE__.'\\___71182312')){function ___71182312($_1232412089){static $_1730958736= false; if($_1730958736 == false) $_1730958736=array('V1dB'.'TEx'.'fT'.'E'.'9D'.'Sw==',''.'c2VjdXJpdHk=','Y2'.'Fja'.'GU=','dHRs',''.'REFU'.'QQ==','e'.'yI'.'=',''.'V1dB'.'TEx'.'fTE'.'9'.'DSw==',''.'c2Vjd'.'XJ'.'pdHk=',''.'U0VDVVJ'.'JVFl'.'fV1dBTE'.'x'.'f'.'R'.'VhDRV'.'BUS'.'U'.'9O','RkFJTF9DSEVDS'.'0lO'.'Rw==','Q2FuIG5vdCBle'.'GVjdXRlI'.'Hd3'.'YWxsI'.'H'.'J1b'.'GVzOi'.'A=','IFRyY'.'W'.'N'.'l'.'OiA=','UkVRVU'.'VTVF9VUk'.'k=','a2'.'V5'.'c'.'w==','dmFsdWVz','U0'.'VDVVJJVFlf'.'V1'.'dBTExfT'.'U'.'9ESUZ'.'Z','L'.'g='.'=',''.'U0VDVVJJV'.'FlfV'.'1'.'dBTE'.'xfVU5TR'.'VQ=',''.'L'.'g==','U'.'0VDVVJJVF'.'l'.'fV1dBTEx'.'fR'.'Vh'.'JV'.'A='.'=','Lg='.'=','Z2x'.'v'.'YmF'.'s','a2'.'V5cw==','d'.'m'.'FsdWVz','Z'.'2V'.'0','Z'.'2V0','cG9zdA'.'==','cG9zdA'.'==','Y29'.'v'.'a'.'2ll','Y29va2ll','cmVxdWVzdA==',''.'cmV'.'xd'.'WV'.'z'.'dA==',''.'Z'.'2xvYm'.'Fs','Z2xvYmFs','bWF'.'pbl9zZWM=','V1'.'d'.'BT'.'ExfQUNUVUFMSVpFX1JVTE'.'V'.'T','dg==','d'.'mVyc2lv'.'bg==',''.'aQ'.'==','aXNJbnN0YWxsZWQ=','c29j'.'a2V0VG'.'ltZ'.'W91dA'.'==','c3RyZ'.'WFtV'.'G'.'ltZW91'.'d'.'A==','KCc=',''.'ZGF'.'0Y'.'Q==','Jywg'.'Jw==',''.'bW9kdWxl','Jyw'.'gJw==',''.'bW9'.'k'.'dWxlX3ZlcnNpb24'.'=','Jyk=',''.'LC'.'A=',''.'U0VDVVJJVFlfV'.'1'.'dBTExf'.'R'.'Vh'.'DRVBUSU'.'9O',''.'bWFpbg'.'==','RkFJTF'.'9SRUZSRVNISU5H',''.'Q'.'2'.'FuIG5vdCByZWZy'.'ZXNo'.'I'.'Hd3YW'.'xsIH'.'J1bGV'.'zOi'.'A=','IFRyY'.'WNlO'.'iA'.'=','ZGF0YQ==','eyI=','LS'.'0'.'tLS1CRUdJTi'.'BQVUJMSU'.'Mg'.'S0V'.'ZLS0tL'.'S0=','Ck1'.'J'.'SUJ'.'JakFOQm'.'drcWhra'.'Uc5d'.'zBC'.'QVFFRkF'.'BT'.'0NB'.'U'.'ThBT'.'U'.'lJQ'.'kNnS0'.'NBUUV'.'B'.'c'.'ThRRTBIa'.'m1ISlVTd'.'FdWNm'.'4'.'wemEKUlZv'.'THgwMkt6YmZy'.'YlMvUDZzV2'.'F4VHp3O'.'F'.'NlR1R0YlR'.'DT3JwSGk'.'1UU'.'Y2T1J5alovWHh'.'6L'.'0t'.'MVT'.'F'.'H'.'Ym'.'9mO'.'U'.'NaMwo'.'0'.'ej'.'d'.'Ta3FVdD'.'Y2a'.'WJYd'.'k9GQng'.'0ZncvQ'.'V'.'BQU'.'kdEc'.'X'.'R'.'tMG'.'5'.'E'.'M2'.'ZnR3N1M1JlUG'.'d'.'3M'.'jlpOCt2bTdt'.'d'.'EJLSlVZ'.'bD'.'R'.'yCl'.'ZwYjZzZlpFV'.'DlLRWI2V'.'DFIRFl'.'tRXZ'.'jMWhx'.'L2'.'lpd'.'Xl4'.'THJ'.'aW'.'mk1'.'UTZ'.'VZm'.'Y0VUV2VEkrNj'.'hz'.'c0'.'ZSa'.'1Erb3dUUnkKZU9JT'.'W'.'JGaE0vVVRtZlZZYlRSRnk'.'yb1'.'VRO'.'FdN'.'em'.'Eybko1U2Foe'.'mkxVUtPMWpBalhUUFJyemM3'.'QWp1'.'NjM5ajFPMApwcHFmb'.'TV4Z1d'.'s'.'Rk'.'FKa0hR'.'VG'.'diZ'.'GQ1QVd'.'x'.'REZ'.'Ra3Q5SEt'.'rWStUbmZCTEdWT'.'XZWeVB3VEhOV1FZQXc0'.'e'.'HBnL3d'.'BClp'.'3'.'S'.'URBUUF'.'CC'.'i0'.'tLS0tRU5'.'EIFBVQkxJQyBLR'.'VktLS0t'.'LQ='.'=');return base64_decode($_1730958736[$_1232412089]);}}; use Bitrix\Main\Application; use Bitrix\Main\Config\Option; use Bitrix\Main\Data\Cache; use Bitrix\Main\ModuleManager; use Bitrix\Main\Security\PublicKeyCipher; use Bitrix\Main\SystemException; use Bitrix\Main\Web\HttpClient; use Bitrix\Main\Web\Json; use Bitrix\Main\Security\W\Rules\Rule; use Bitrix\Main\Security\W\Rules\Results\RuleAction; use Bitrix\Main\Security\W\Rules\Results\RuleResult; use Bitrix\Main\Security\W\Rules\Results\CheckResult; use Bitrix\Main\Security\W\Rules\Results\ModifyResult; use Bitrix\Main\Type\ArrayHelper; use Bitrix\Main\Security\W\Rules\RuleRecordTable; class WWall{ const CACHE_RULES_TTL= 10800; private static $_1972695379= 'https://wwall.bitrix.info/rules.php'; protected $_1812968806= true; public function handle(){ try{  $_1932758476= Cache::createInstance(); $_1682243042= false; if($_1932758476->initCache(static::CACHE_RULES_TTL, 'WWALL_LOCK', 'security')){ $_1699171777= $_1932758476->getVars(); if($GLOBALS['____1616545343'][0]()- $_1699171777> round(0+10+10)){  $_475360871= Application::getConnection(); $_1268541580= RuleRecordTable::getTableName(); $_475360871->truncateTable($_1268541580); RuleRecordTable::cleanCache(); $_1932758476->clean(___71182312(0), ___71182312(1));}} elseif($_1932758476->startDataCache()){  $_1932758476->endDataCache($GLOBALS['____1616545343'][1]()); $_1682243042= true;}  $_767118565= RuleRecordTable::getList([ ___71182312(2) =>[___71182312(3) => round(0+1800+1800)* round(0+6+6+6+6)* round(0+7)]])->fetchAll(); foreach($_767118565 as $_2030412132){ $_1268618242= new PublicKeyCipher; $_1251554126= $_1268618242->decrypt($_2030412132[___71182312(4)], static::__452696368()); if(!str_starts_with($_1251554126, ___71182312(5))){ continue;} $_1701108682= $GLOBALS['____1616545343'][2]($_1251554126, true); if(!empty($_1701108682)){ $_1413297243= Rule::make($_1701108682); $_241779820= $this->handleRule($_1413297243); $this->applyHandlingResults($_241779820);}}  if($_1682243042){ $_1932758476->clean(___71182312(6), ___71182312(7));}} catch(\Throwable $_528079559){ $this->logEvent( ___71182312(8), ___71182312(9), ___71182312(10). $_528079559->getMessage(). ___71182312(11). $_528079559->getTraceAsString());}}  public function handleRule(Rule $_1413297243): array{ $_241779820=[]; if($_1413297243->matchPath($_SERVER[___71182312(12)])){  $_331757584= $this->getContextElements($_1413297243->getContext()); foreach($_331757584 as $_373317023 => &$_1213011783){ $_241779820= $GLOBALS['____1616545343'][3]($_241779820, $this->recursiveContextKeyHandle($_373317023, $_1213011783,[], $_1413297243));}} return $_241779820;}  public function applyHandlingResults(array $_241779820){ $_331757584= $this->getContextElements([ 'get', 'post', 'cookie', 'request', 'global']); foreach($_241779820 as $_1551309777){ $_1213011783=& $_331757584[$_1551309777->getContextName()]; $_1295779810= $_1551309777->getRuleResult(); $_1413297243= $_1551309777->getRule(); if($_1295779810 instanceof ModifyResult){ if($_1413297243->getProcess() === ___71182312(13)){  static::rewriteContextKey( $_1551309777->getContextName(), $_1213011783, $_1551309777->getContextKey(), $_1295779810->getCleanValue());} elseif($_1413297243->getProcess() === ___71182312(14)){ static::rewriteContextValue( $_1551309777->getContextName(), $_1213011783, $_1551309777->getContextKey(), $_1295779810->getCleanValue());} $this->logEvent( ___71182312(15), $_1551309777->getContextName(), $GLOBALS['____1616545343'][4](___71182312(16), $_1551309777->getContextKey()));} elseif($_1295779810 instanceof CheckResult &&!$_1295779810->isSuccess()){ if($_1295779810->getAction() === RuleAction::UNSET){ static::unsetContextValue( $_1551309777->getContextName(), $_1213011783, $_1551309777->getContextKey(),); $this->logEvent( ___71182312(17), $_1551309777->getContextName(), $GLOBALS['____1616545343'][5](___71182312(18), $_1551309777->getContextKey()));} elseif($_1295779810->getAction() === RuleAction::EXIT){ $this->logEvent( ___71182312(19), $_1551309777->getContextName(), $GLOBALS['____1616545343'][6](___71182312(20), $_1551309777->getContextKey())); exit;}}}} public function disableEventLogging(){ $this->_1812968806= false;} protected function rewriteContextKey($_373317023, &$_1213011783, $_43171384, $_1163350113){ $_1952677687= $_43171384;  $GLOBALS['____1616545343'][7]($_1952677687); $_1952677687[]= $_1163350113; if($_373317023 === ___71182312(21)){ $_420619334= $GLOBALS['____1616545343'][8]($_43171384); $GLOBALS['____1616545343'][9]($_1952677687); if(empty($_43171384)){ $GLOBALS[$_1163350113]= $GLOBALS[$_420619334]; unset($GLOBALS[$_420619334]);} else{ $_1213011783=& $GLOBALS[$_420619334]; $_924033360= ArrayHelper::getByNestedKey($_1213011783, $_43171384);  ArrayHelper::setByNestedKey($_1213011783, $_1952677687, $_924033360);  ArrayHelper::unsetByNestedKey($_1213011783, $_43171384);}} else{ $_924033360= ArrayHelper::getByNestedKey($_1213011783, $_43171384);  ArrayHelper::setByNestedKey($_1213011783, $_1952677687, $_924033360);  ArrayHelper::unsetByNestedKey($_1213011783, $_43171384);}} protected function rewriteContextValue($_373317023, &$_1213011783, $_1227870690, $_924033360){ if($_373317023 === 'global'){ $_420619334= $GLOBALS['____1616545343'][10]($_1227870690); if(empty($_1227870690)){ $GLOBALS[$_420619334]= $_924033360;} else{ $_1213011783=& $GLOBALS[$_420619334]; ArrayHelper::setByNestedKey($_1213011783, $_1227870690, $_924033360);}} else{  ArrayHelper::setByNestedKey($_1213011783, $_1227870690, $_924033360);}} protected function unsetContextValue($_373317023, &$_1213011783, $_1227870690){ if($_373317023 === 'global'){ $_420619334= $GLOBALS['____1616545343'][11]($_1227870690); if(empty($_1227870690)){ unset($GLOBALS[$_420619334]);} else{ $_1213011783=& $GLOBALS[$_420619334]; ArrayHelper::unsetByNestedKey($_1213011783, $_1227870690);}} else{ ArrayHelper::unsetByNestedKey($_1213011783, $_1227870690);}}  protected function recursiveContextKeyHandle(string $_373317023, array &$_1213011783, array $_798977335, Rule $_1413297243): array{  $_241779820=[]; foreach($_1213011783 as $_1666376574 => $_924033360){ $_1227870690= $GLOBALS['____1616545343'][12]($_798977335,[$_1666376574]); if($_1413297243->matchKey($_1227870690)){  if($_1413297243->getProcess() === ___71182312(22)){ $_1295779810= $_1413297243->evaluate($_1666376574);} elseif($_1413297243->getProcess() === ___71182312(23)){ $_1295779810= $_1413297243->evaluateValue($_924033360);}  if(!empty($_1295779810) && $_1295779810 instanceof RuleResult){ $_241779820[]= new HandlingResult($_373317023, $_1227870690, $_1295779810, $_1413297243);}}  if($GLOBALS['____1616545343'][13]($_924033360)){ $_241779820= $GLOBALS['____1616545343'][14]($_241779820, $this->recursiveContextKeyHandle( $_373317023, $_1213011783[$_1666376574], $_1227870690, $_1413297243));}} return $_241779820;} protected function getContextElements(array $_1609639593){ $_1779681591=[]; if($GLOBALS['____1616545343'][15](___71182312(24), $_1609639593, true)){ $_1779681591[___71182312(25)]= &$_GET;} if($GLOBALS['____1616545343'][16](___71182312(26), $_1609639593, true)){ $_1779681591[___71182312(27)]= &$_POST;} if($GLOBALS['____1616545343'][17](___71182312(28), $_1609639593, true)){ $_1779681591[___71182312(29)]= &$_COOKIE;} if($GLOBALS['____1616545343'][18](___71182312(30), $_1609639593, true)){ $_1779681591[___71182312(31)]= &$_REQUEST;} if($GLOBALS['____1616545343'][19](___71182312(32), $_1609639593, true)){ $_1779681591[___71182312(33)]= $GLOBALS;} return $_1779681591;} public static function refreshRules(){ try{ $_1431017785= Option::get('main_sec', 'WWALL_ACTUALIZE_RULES', 0); if(($GLOBALS['____1616545343'][20]()- $_1431017785)< static::CACHE_RULES_TTL){ return;} Option::set(___71182312(34), ___71182312(35), $GLOBALS['____1616545343'][21]()); $_1172045359= null;  $_2061308905= $GLOBALS['____1616545343'][22](function($_1288791377){ return[___71182312(36) => $_1288791377[___71182312(37)], ___71182312(38) => (int) $_1288791377[___71182312(39)]];}, ModuleManager::getModulesFromDisk());  $_26503602= new HttpClient([ ___71182312(40) => round(0+1.25+1.25+1.25+1.25), ___71182312(41) => round(0+5)]); $_1725908712= $_26503602->post( static::$_1972695379,[ 'modules' => $GLOBALS['____1616545343'][23]($_2061308905), 'license' => Application::getInstance()->getLicense()->getHashLicenseKey()]); if($_26503602->getStatus() == round(0+40+40+40+40+40) &&!empty($_1725908712)){ $_1172045359= Json::decode($_1725908712);}  if($_1172045359 !== null){ $_475360871= Application::getConnection(); $_1268541580= RuleRecordTable::getTableName(); if(!empty($_1172045359)){ foreach($_1172045359 as $_1072498568){ if(!static::checkRuleSign($_1072498568)){ throw new SystemException('Invalid sign for rule '.$GLOBALS['____1616545343'][24]($_1072498568));}}}  $_475360871->truncateTable($_1268541580);  if(!empty($_1172045359)){ $_524832621=[]; foreach($_1172045359 as $_1072498568){ $_524832621[]= ___71182312(42). $_475360871->getSqlHelper()->forSql($_1072498568[___71182312(43)]). ___71182312(44). $_475360871->getSqlHelper()->forSql($_1072498568[___71182312(45)]). ___71182312(46). $_475360871->getSqlHelper()->forSql($_1072498568[___71182312(47)]). ___71182312(48);} $_261871850= $GLOBALS['____1616545343'][25](___71182312(49), $_524832621);  $_475360871->query("INSERT INTO {$_1268541580} (DATA, MODULE, MODULE_VERSION) VALUES {$_261871850}");  RuleRecordTable::cleanCache();}}} catch(\Throwable $_528079559){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, ___71182312(50), ___71182312(51), ___71182312(52), ___71182312(53). $_528079559->getMessage(). ___71182312(54). $_528079559->getTraceAsString());}} protected static function checkRuleSign($_1413297243){ $_1268618242= new PublicKeyCipher; $_1701108682= $_1268618242->decrypt($_1413297243[___71182312(55)], static::__452696368()); return str_starts_with($_1701108682, ___71182312(56));} private static function __452696368(){ $_1987815132= ''; $_1987815132 .= ___71182312(57); $_1987815132 .= ___71182312(58); return $_1987815132;} protected function logEvent($_1841412195, $_1084841215, $_528587059){ if($this->_1812968806){ \CEventLog::log( \CEventLog::SEVERITY_SECURITY, $_1841412195, 'main', $_1084841215, $_528587059);}}}?>